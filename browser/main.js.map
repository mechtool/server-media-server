{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/media-server/media-server.component.ts","./src/app/components/media-server/media-server.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\ndeclare const MediaRecorder ;\n\n@Component({\n  selector: 'app-media-server',\n  templateUrl: './media-server.component.html',\n  styleUrls: ['./media-server.component.css']\n})\nexport class MediaServerComponent implements OnInit {\n\n  constructor() { }\n\n    onStartTranslation(){\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n             navigator.mediaDevices.getUserMedia (\n                {\n                    audio: true,\n                    video : true,\n                }).then(  stream => {\n\n                let url = window.location.origin.replace('http', 'ws');\n                const ws = new WebSocket(url + '/');\n\n                ws.addEventListener('open', (e) => {\n                    console.log('WebSocket Open', e);\n                });\n                ws.addEventListener('close', (e) => {\n                    console.log('WebSocket Close', e);\n                });\n\n                const mediaRecorder = new MediaRecorder(stream, {\n                     mimeType: 'video/webm;codecs=h264',\n                     videoBitsPerSecond: 3 * 1024 * 1024\n                 });\n\n                 mediaRecorder.start(1000); // Start recording, and dump data every second\n                 mediaRecorder.addEventListener('dataavailable', (e) => {\n                   ws.send(e.data);\n                });\n                mediaRecorder.addEventListener('stop', ()=> {\n                   ws.close.bind(ws);\n                });\n\n            }).catch(function(err) {\n                    console.log('The following getUserMedia error occured: ' + err);\n                }\n            );\n        } else {\n            console.log('getUserMedia not supported on your browser!');\n        }\n    }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<video id=\"remote-video-element\" autoplay></video>\n<button class=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\" (click)=\"onStartTranslation()\">Начать передачу</button>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-content\"><router-outlet></router-outlet>\n    </div>`,\n  host : {\n\n  }\n})\nexport class AppComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport {MediaServerComponent} from \"./components/media-server/media-server.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MediaServerComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MediaServerComponent} from \"./components/media-server/media-server.component\";\n\nconst routes: Routes = [\n  {path : 'media-server' , component : MediaServerComponent},\n  {path : '' , pathMatch : 'full', redirectTo : 'media-server'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}